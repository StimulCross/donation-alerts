import { DataObject, rawDataSymbol, ReadDocumentation } from '@donation-alerts/common';
import { mapNullable } from '@stimulcross/shared-utils';

/** @internal */
export interface DonationAlertsCustomAlertData {
	id: number;
	external_id: string | null;
	header: string | null;
	message: string | null;
	image_url: string | null;
	sound_url: string | null;
	is_shown: 0 | 1;
	created_at: string;
	shown_at: string | null;
}

/**
 * Represents a Donation Alerts custom alert object.
 */
@ReadDocumentation('api')
export class DonationAlertsCustomAlert extends DataObject<DonationAlertsCustomAlertData> {
	/**
	 * The unique custom alert identifier.
	 */
	get id(): number {
		return this[rawDataSymbol].id;
	}

	/**
	 * Unique alert ID generated by the application developer. Or `null` if ID was not provided.
	 */
	get externalId(): string | null {
		return this[rawDataSymbol].external_id;
	}

	/**
	 * Text that will be displayed as a header. Or `null` if text was not provided.
	 */
	get header(): string | null {
		return this[rawDataSymbol].header;
	}

	/**
	 * Text that will be displayed inside the message box. Or `null` if text was not provided.
	 */
	get message(): string | null {
		return this[rawDataSymbol].message;
	}

	/**
	 * URL to the image file that will be displayed along with the custom alert. Or `null` if URL was not provided.
	 */
	get imageUrl(): string | null {
		return this[rawDataSymbol].image_url;
	}

	/**
	 * URL to the sound file that will play when displaying the custom alert. Or `null` if URL was not provided.
	 */
	get soundUrl(): string | null {
		return this[rawDataSymbol].sound_url;
	}

	/**
	 * Whether the alert was shown in the streamer's widget.
	 */
	get isShown(): boolean {
		return this[rawDataSymbol].is_shown === 1;
	}

	/**
	 * The date and time when custom alert was created.
	 */
	get creationDate(): Date {
		return new Date(this[rawDataSymbol].created_at);
	}

	/**
	 * Date and time indicating when the alert was shown. Or `null` if the alert is not shown yet.
	 */
	get showDate(): Date | null {
		return mapNullable(this[rawDataSymbol].shown_at, (v: string) => new Date(v));
	}
}
